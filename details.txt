[e_schema]
 Error: No "http" or "https" schema supplied. Check syntax and try again.

[e_invalid]
 Error: The URL is not valid. Check syntax and try again.

[e_waf_gdpr]
 Error: Forbidden access to the URL. Perhaps caused by a WAF or IP block?.

[e_proxy]
 Error: Proxy authentication required (not yet supported by this program).

[e_serror]
 Error: Server error requesting URL (wait a while and try again).

[e_404]
 Error: URL not found. Check syntax and try again.

[e_timeout]
 Error: URL is taking too long to respond. Wait a while and try again.
 
[report]
 Report saved to 

[0section]
[0. Info]

[0headers]
[HTTP Response Headers]

[1missing]
[1. Missing HTTP Security Headers]

[2fingerprint]
[2. Fingerprint HTTP Response Headers]

[3depinsecure]
[3. Deprecated HTTP Response Headers/Protocols and Insecure Values]

[4empty]
[4. Empty HTTP Response Headers Values]

[5compat]
[5. Browser Compatibility for Enabled HTTP Security Headers]

[analysis_ua]
 (Slava Ukraini!). Analyzing URL, Please wait ...

[analysis]
 Analyzing URL, Please wait ...

[info]
 Date :

[python]
 This tool requires, at least, Python 3.6.
 Ref: https://github.com/rfc-st/humble#installation--update

[ok]
 Nothing to report, all seems OK!

[mcache]
 Directives for caching in both requests and responses.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

[mcsd]
 Clears browsing data (cookies, storage, cache) associated with the requesting website.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Clear-Site-Data

[mctype]
 Indicates the original media type of the resource.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type
 Ref: https://textslashplain.com/2018/01/08/content-types-matter-more-than-you-think/

[mcoe]
 Prevents documents and workers from loading non-same-origin requests unless allowed.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy

[mcop]
 Prevent other websites from gaining arbitrary window references to a page.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy

[mcor]
 Protect servers against certain cross-origin or cross-site embedding of the returned source.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy_(CORP)

[mcsp]
 Detect and mitigate Cross Site Scripting (XSS) and data injection attacks, among others.
 Ref: https://content-security-policy.com/

[mpermission]
 Previously called "Feature-Policy", allow and deny the use of browser features.
 Ref: https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/

[mnel]
 Enables web applications to declare a reporting policy to report errors.
 Ref: https://scotthelme.co.uk/network-error-logging-deep-dive/

[mpragma]
 Used for backwards compatibility with HTTP/1.0 clients.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma

[mreferrer]
 Controls how much referrer information should be included with requests.
 Ref: https://scotthelme.co.uk/a-new-security-header-referrer-policy/

[msts]
 Tell browsers that it should only be accessed using HTTPS, instead of using HTTP.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security

[mxcto]
 Indicate that MIME types in the "Content-Type" headers should be followed.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options

[mxfo]
 Prevents clickjacking attacks, limiting sources of embedded content.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options

[iaccess]
 Review the values '*' or 'null' regarding your Cross-origin resource sharing requirements.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin

[icache]
 Enable 'no-cache', 'no-store', and 'must-revalidate' if there are sensitive data.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

[icsp]
 'unsafe-inline' and 'unsafe-eval' negate most of the security benefits provided by this header.
 Ref: https://csper.io/blog/no-more-unsafe-inline
 Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval

[icsi]
 Include at least one valid directive.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy

[icsn]
 '=' could be an incorrect value in the definition of this header.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy

[icsh]
 It is not recommended to allow content of insecure schemes ('http://').
 Ref: https://beaglesecurity.com/blog/vulnerability/content-security-policy-implemented-with-insecure-scheme.html
 Ref: https://beaglesecurity.com/blog/vulnerability/content-security-policy-allowing-media-to-be-loaded.html

[ictp]
 The only valid value is 'nosniff'.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options

[ictpd]
 This header, or its values, may be duplicated.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options

[ieta]
 Although unlikely to be exploited, this header should not include inode information.
 Ref: https://www.pentestpartners.com/security-blog/vulnerabilities-that-arent-etag-headers/

[iffea]
 "Feature-Policy" has been renamed to "Permissions-Policy".
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy

[ifpoln]
 Include at least one valid feature.
 Ref: https://github.com/w3c/webappsec-permissions-policy/blob/main/features.md
 Ref: https://csplite.com/fp/

[ifpol]
 The value '*' allows the feature in this document, and iframes regardless of their origin.
 Ref: https://developer.chrome.com/en/docs/privacy-sandbox/permissions-policy/

[ifpoli]
 'none' is not a correct value; use '()' instead.
 Ref: https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/

[ihttp]
 You are analyzing a domain via HTTP, in which the communications are not encrypted.
 Ref: https://www.cloudflare.com/learning/ssl/why-is-http-not-secure/

[imethods]
 Ref: https://appcheck-ng.com/http-verbs-security-risks/

[ipkp]
 This header is deprecated.
 Ref: https://scotthelme.co.uk/hpkp-is-no-more/

[iref]
 Use 'strict-origin' or 'strict-origin-when-cross-origin' if there are sensitive resources.
 Or fall back to 'no-referrer-when-downgrade' or even 'no-referrer'.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy

[irefi]
 'unsafe-url' will leak potentially-private information from HTTPS URLs to insecure origins.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy

[iset]
 Enable 'secure' and 'httponly': to send it via HTTPS and not be accessed by client APIs.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie

[ists]
 Add 'includeSubDomains' and set 'max-age' to at least 31536000 (one year).
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
 Ref: https://https.cio.gov/hsts/

[istsd]
 This header, or its values, may be duplicated.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security

[ihsts]
 This header is ignored by the browser when accessing via HTTP.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security

[ihbas]
 The "Basic" HTTP authentication scheme sends base64-encoded credentials, without encrypting them.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication

[iexct]
 This header is deprecated.
 Ref: https://chromestatus.com/feature/6244547273687040

[ipkph]
 This header must be returned only in HTTPS connections.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning

[itao]
 The value '*' gives permission to any origin to see timing resources.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin

[itim]
 This header should not expose sensitive application or infrastructure information.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing

[ixcd]
 The value 'all' could permit any cross-domain requests from Flash and PDF documents.
 Ref: https://getbutterfly.com/security-headers-a-concise-guide/
 Ref: https://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/xdomain.html

[ixcsp]
 This header is deprecated. Use instead "Content-Security-Policy".
 Ref: https://content-security-policy.com/

[ixdp]
 Enabling DNS prefetching could bypass "Content-Security-Policy" directives.
 Ref: https://blog.compass-security.com/2016/10/bypassing-content-security-policy-with-dns-prefetching/

[ixdow]
 This header is specific to Internet Explorer 8 (discontinued in 2016).
 Ref: https://www.nwebsec.com/HttpHeaders/SecurityHeaders/XDownloadOptions
 Ref: https://docs.microsoft.com/en-us/lifecycle/products/internet-explorer-8

[ixfo]
 This header, or its values, may be duplicated.
 Better yet: replace its functionality with the "Content-Security-Policy" header.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options

[ixpad]
 This header is deprecated since 2008.
 Ref: https://stackoverflow.com/questions/8711584/x-pad-avoid-browser-bug-header-added-by-apache

[ixpb]
 xmlrpc.php can introduce vulnerabilities; has been superseded by the WordPress REST API.
 Ref: https://kinsta.com/blog/xmlrpc-php/

[ixrob]
 The value 'all' implies no restrictions for indexing or serving content, regarding search engines.
 Could pose a security risk: indexing of exposed administration panels, sensitive information, etc.
 Ref: https://semoladigital.com/robots-meta-tag-xrobots-tag-data-nosnippet-everything-you-need-to-know/

[ixrun]
 The value of this header could allow valid user harvesting attacks.
 Ref: https://www.virtuesecurity.com/kb/x-runtime-header-timing-attacks/
 
[ixxp]
 To mitigate XSS attacks, restrictively enable the "Content-Security-Policy" header.
 Ref: https://auth0.com/blog/defending-against-xss-with-csp/

[ixxpd]
 This header, or its values, may be duplicated.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection

[aemp]
 The following headers have no value (could be equivalent to as if they were not enabled):

[afgp]
 These headers can leak information about software, versions, hostnames or IP addresses:

[aisc]
 The following headers/protocols are deprecated or their values may be considered unsafe:

[bcnt]
 This humble program will not analyze Russian domains, nor will it be allowed to be used from Russian IPs, until Russia withdraws from Ukraine.
 Ref: https://github.com/rfc-st/humble/blob/master/CODE_OF_CONDUCT.md#update-20220326

[miss_cnt]
  Missing headers:              

[finger_cnt]
  Fingerprint headers:          

[insecure_cnt]
  Deprecated/Insecure headers:  

[empty_cnt]
  Empty headers:                

[analysis_time]
Analysis done in 

[analysis_time_sec]
 seconds!.  
