[mcache]
 Directives for caching in both requests and responses.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

[mcsd]
 Clears browsing data (cookies, storage, cache).
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Clear-Site-Data

[mcoe]
 Prevents documents and workers from loading non-same-origin requests unless allowed.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy

[mcop]
 Prevent other websites from gaining arbitrary window references to a page.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy

[mcor]
 Allows a resource owner to specify who can load the resource.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy_(CORP)

[mcsp]
 Detect and mitigate Cross Site Scripting (XSS) and data injection attacks, among others.
 Ref: https://content-security-policy.com/
 
[mexpect]
 Prevents the use of misissued certificates from going unnoticed.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT

[mpermission]
 Previously called 'Feature-Policy', allow and deny the use of browser features.
 Ref: https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/

[mnel]
 Enables web applications to declare a reporting policy to report errors.
 Ref: https://scotthelme.co.uk/network-error-logging-deep-dive/

[mpragma]
 For backwards compatibility with HTTP/1.0 caches.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma

[mreferrer]
 Controls how much referrer information should be included with requests.
 Ref: https://scotthelme.co.uk/a-new-security-header-referrer-policy/

[msts]
 Tell browsers that it should only be accessed using HTTPS, instead of using HTTP.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security

[mxcto]
 Indicate that the MIME types in the Content-Type headers should not be changed and be followed.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options

[mxfo]
 Whether or not a browser should be allowed to render a page in a <frame>, <iframe>, <embed> or <object>.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options

[icache]
 Use 'no-cache', 'no-store', and 'must-revalidate' if there are sensitive data.

[icsp]
 Remove 'unsafe-inline' and/or 'unsafe-eval' whenever possible, by moving inline code to .js/.css files or using nonces/hashes.

[ifpol]
 The value '*' allows the feature in this document, and all nested browsing contexts (iframes) regardless of their origin.

[ipkp]
 This header, and public Key Pinning mechanism, were deprecated in favor of Certificate Transparency and Expect-CT header.
 Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Public-Key-Pins

[iref]
 Use 'strict-origin' or 'strict-origin-when-cross-origin' if there are sensitive or private resources in the domain.
 Otherwise fallback to 'no-referrer-when-downgrade' or even 'no-referrer' if is not required.

[iset]
 Use 'secure' and 'httponly' to ensure that cookies are sent securely and are not accessed by unintended parties or scripts.

[ists]
 It is recommended to add 'includeSubDomains' and define 'max-age' equal or greater than 31536000 (seconds = 1 year).

[itao]
 The value '*' gives permission to any origin to see timing resources via Resource Timing API. 

[ixcd]
 The value 'all' could permit any cross-domain requests from Flash and PDF documents.

[ixdp]
 Enabling DNS prefetching could bypass Content-Security-Policy directives
 Ref: https://blog.compass-security.com/2016/10/bypassing-content-security-policy-with-dns-prefetching/

[ixpb]
 xmlrpc.php (its pingback functionality) can introduce security vulnerabilities; has been superseded by the WordPress REST API.
 Ref: https://kinsta.com/blog/xmlrpc-php/
 
[ixxp]
 To mitigate XSS attacks, restrictively enable the "Content-Security-Policy" header.

[aemp]
 The following headers have no value (could be equivalent to as if they were not enabled):

[afgp]
 Remove or modify these headers, if identify real software/version:

[aisc]
 All, or any, of the values in these headers could be considered insecure:
